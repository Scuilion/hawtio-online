{
  "request": {
    "type": "list"
  },
  "value": {
    "org.springframework.boot": {
      "name=healthEndpoint,type=Endpoint": {
        "op": {
          "isSensitive": {
            "args": [],
            "ret": "boolean",
            "desc": "Indicates whether the underlying endpoint exposes sensitive information"
          },
          "getEndpointClass": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Returns the class of the underlying endpoint"
          },
          "getData": {
            "args": [],
            "ret": "java.lang.Object",
            "desc": "Invoke the underlying endpoint"
          }
        },
        "attr": {
          "EndpointClass": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Returns the class of the underlying endpoint"
          },
          "Sensitive": {
            "rw": false,
            "type": "boolean",
            "desc": "Indicates whether the underlying endpoint exposes sensitive information"
          },
          "Data": {
            "rw": false,
            "type": "java.lang.Object",
            "desc": "Invoke the underlying endpoint"
          }
        },
        "class": "org.springframework.boot.actuate.endpoint.jmx.DataEndpointMBean",
        "desc": ""
      }
    },
    "JMImplementation": {
      "type=MBeanServerDelegate": {
        "attr": {
          "ImplementationName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The JMX implementation name (the name of this product)"
          },
          "MBeanServerId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The MBean server agent identification"
          },
          "ImplementationVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The JMX implementation version (the version of this product)."
          },
          "SpecificationVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The version of the JMX specification implemented by this product."
          },
          "SpecificationVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The vendor of the JMX specification implemented by this product."
          },
          "SpecificationName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The full name of the JMX specification implemented by this product."
          },
          "ImplementationVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "the JMX implementation vendor (the vendor of this product)."
          }
        },
        "class": "javax.management.MBeanServerDelegate",
        "desc": "Represents  the MBean server from the management point of view."
      }
    },
    "java.util.logging": {
      "type=Logging": {
        "op": {
          "getLoggerLevel": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              }
            ],
            "ret": "java.lang.String",
            "desc": "getLoggerLevel"
          },
          "getParentLoggerName": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              }
            ],
            "ret": "java.lang.String",
            "desc": "getParentLoggerName"
          },
          "setLoggerLevel": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setLoggerLevel"
          }
        },
        "attr": {
          "LoggerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "LoggerNames"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "java.lang": {
      "name=PS Scavenge,type=GarbageCollector": {
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "LastGcInfo": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "LastGcInfo"
          },
          "CollectionTime": {
            "rw": false,
            "type": "long",
            "desc": "CollectionTime"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionCount"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.GarbageCollectorImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Threading": {
        "op": {
          "getThreadCpuTime": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[J",
              "desc": "getThreadCpuTime"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "long",
              "desc": "getThreadCpuTime"
            }
          ],
          "getThreadInfo": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "int",
                  "desc": "p1"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "javax.management.openmbean.CompositeData",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "int",
                  "desc": "p1"
                }
              ],
              "ret": "javax.management.openmbean.CompositeData",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": "p2"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            }
          ],
          "findDeadlockedThreads": {
            "args": [],
            "ret": "[J",
            "desc": "findDeadlockedThreads"
          },
          "getThreadAllocatedBytes": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[J",
              "desc": "getThreadAllocatedBytes"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "long",
              "desc": "getThreadAllocatedBytes"
            }
          ],
          "getThreadUserTime": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[J",
              "desc": "getThreadUserTime"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "long",
              "desc": "getThreadUserTime"
            }
          ],
          "findMonitorDeadlockedThreads": {
            "args": [],
            "ret": "[J",
            "desc": "findMonitorDeadlockedThreads"
          },
          "resetPeakThreadCount": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakThreadCount"
          },
          "dumpAllThreads": {
            "args": [
              {
                "name": "p0",
                "type": "boolean",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "boolean",
                "desc": "p1"
              }
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "dumpAllThreads"
          }
        },
        "attr": {
          "ThreadAllocatedMemorySupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ThreadAllocatedMemorySupported"
          },
          "ThreadContentionMonitoringEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "ThreadContentionMonitoringEnabled"
          },
          "TotalStartedThreadCount": {
            "rw": false,
            "type": "long",
            "desc": "TotalStartedThreadCount"
          },
          "CurrentThreadCpuTimeSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CurrentThreadCpuTimeSupported"
          },
          "CurrentThreadUserTime": {
            "rw": false,
            "type": "long",
            "desc": "CurrentThreadUserTime"
          },
          "PeakThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "PeakThreadCount"
          },
          "AllThreadIds": {
            "rw": false,
            "type": "[J",
            "desc": "AllThreadIds"
          },
          "ThreadAllocatedMemoryEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "ThreadAllocatedMemoryEnabled"
          },
          "CurrentThreadCpuTime": {
            "rw": false,
            "type": "long",
            "desc": "CurrentThreadCpuTime"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "ThreadContentionMonitoringSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ThreadContentionMonitoringSupported"
          },
          "ThreadCpuTimeSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ThreadCpuTimeSupported"
          },
          "ThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "ThreadCount"
          },
          "ThreadCpuTimeEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "ThreadCpuTimeEnabled"
          },
          "ObjectMonitorUsageSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ObjectMonitorUsageSupported"
          },
          "SynchronizerUsageSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "SynchronizerUsageSupported"
          },
          "DaemonThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "DaemonThreadCount"
          }
        },
        "class": "sun.management.ThreadImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=PS Old Gen,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Memory": {
        "op": {
          "gc": {
            "args": [],
            "ret": "void",
            "desc": "gc"
          }
        },
        "attr": {
          "ObjectPendingFinalizationCount": {
            "rw": false,
            "type": "int",
            "desc": "ObjectPendingFinalizationCount"
          },
          "Verbose": {
            "rw": true,
            "type": "boolean",
            "desc": "Verbose"
          },
          "HeapMemoryUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "HeapMemoryUsage"
          },
          "NonHeapMemoryUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "NonHeapMemoryUsage"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.MemoryImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=Metaspace,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=PS Survivor Space,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=OperatingSystem": {
        "attr": {
          "OpenFileDescriptorCount": {
            "rw": false,
            "type": "long",
            "desc": "OpenFileDescriptorCount"
          },
          "CommittedVirtualMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "CommittedVirtualMemorySize"
          },
          "FreePhysicalMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "FreePhysicalMemorySize"
          },
          "SystemLoadAverage": {
            "rw": false,
            "type": "double",
            "desc": "SystemLoadAverage"
          },
          "Arch": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Arch"
          },
          "ProcessCpuLoad": {
            "rw": false,
            "type": "double",
            "desc": "ProcessCpuLoad"
          },
          "FreeSwapSpaceSize": {
            "rw": false,
            "type": "long",
            "desc": "FreeSwapSpaceSize"
          },
          "TotalPhysicalMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "TotalPhysicalMemorySize"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "TotalSwapSpaceSize": {
            "rw": false,
            "type": "long",
            "desc": "TotalSwapSpaceSize"
          },
          "ProcessCpuTime": {
            "rw": false,
            "type": "long",
            "desc": "ProcessCpuTime"
          },
          "MaxFileDescriptorCount": {
            "rw": false,
            "type": "long",
            "desc": "MaxFileDescriptorCount"
          },
          "SystemCpuLoad": {
            "rw": false,
            "type": "double",
            "desc": "SystemCpuLoad"
          },
          "Version": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Version"
          },
          "AvailableProcessors": {
            "rw": false,
            "type": "int",
            "desc": "AvailableProcessors"
          }
        },
        "class": "sun.management.OperatingSystemImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=PS Eden Space,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=CodeCacheManager,type=MemoryManager": {
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.MemoryManagerImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=Code Cache,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=Compressed Class Space,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "class": "sun.management.MemoryPoolImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=ClassLoading": {
        "attr": {
          "LoadedClassCount": {
            "rw": false,
            "type": "int",
            "desc": "LoadedClassCount"
          },
          "UnloadedClassCount": {
            "rw": false,
            "type": "long",
            "desc": "UnloadedClassCount"
          },
          "Verbose": {
            "rw": true,
            "type": "boolean",
            "desc": "Verbose"
          },
          "TotalLoadedClassCount": {
            "rw": false,
            "type": "long",
            "desc": "TotalLoadedClassCount"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.ClassLoadingImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Compilation": {
        "attr": {
          "CompilationTimeMonitoringSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CompilationTimeMonitoringSupported"
          },
          "TotalCompilationTime": {
            "rw": false,
            "type": "long",
            "desc": "TotalCompilationTime"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.CompilationImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=PS MarkSweep,type=GarbageCollector": {
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "LastGcInfo": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "LastGcInfo"
          },
          "CollectionTime": {
            "rw": false,
            "type": "long",
            "desc": "CollectionTime"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionCount"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.GarbageCollectorImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "name=Metaspace Manager,type=MemoryManager": {
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.MemoryManagerImpl",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Runtime": {
        "attr": {
          "SpecVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SpecVendor"
          },
          "ClassPath": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ClassPath"
          },
          "InputArguments": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "InputArguments"
          },
          "Uptime": {
            "rw": false,
            "type": "long",
            "desc": "Uptime"
          },
          "VmName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "VmName"
          },
          "StartTime": {
            "rw": false,
            "type": "long",
            "desc": "StartTime"
          },
          "VmVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "VmVersion"
          },
          "SpecName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SpecName"
          },
          "ManagementSpecVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ManagementSpecVersion"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "VmVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "VmVendor"
          },
          "LibraryPath": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "LibraryPath"
          },
          "BootClassPath": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "BootClassPath"
          },
          "SpecVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SpecVersion"
          },
          "SystemProperties": {
            "rw": false,
            "type": "javax.management.openmbean.TabularData",
            "desc": "SystemProperties"
          },
          "BootClassPathSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "BootClassPathSupported"
          }
        },
        "class": "sun.management.RuntimeImpl",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "org.apache.camel": {
      "context=MyCamel,name=\"MyCamel\",type=health": {
        "op": {
          "getIsHealthy": {
            "args": [],
            "ret": "boolean",
            "desc": "IsHealthy"
          },
          "details": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Registered Health Checks Details"
          },
          "invoke": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Invoke an Health Check by ID"
          },
          "getHealthChecksIDs": {
            "args": [],
            "ret": "java.util.Collection",
            "desc": "HealthChecksIDs"
          }
        },
        "attr": {
          "HealthChecksIDs": {
            "rw": false,
            "type": "java.util.Collection",
            "desc": "Registered Health Checks IDs"
          },
          "IsHealthy": {
            "rw": false,
            "type": "boolean",
            "desc": "Application Health"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedCamelHealth",
        "desc": ""
      },
      "context=MyCamel,name=DefaultEndpointRegistry,type=services": {
        "op": {
          "getDynamicSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "DynamicSize"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getStaticSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "StaticSize"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "purge": {
            "args": [],
            "ret": "void",
            "desc": "Purges the cache"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Size"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "getMaximumCacheSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "MaximumCacheSize"
          },
          "listEndpoints": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Lists all the endpoints in the registry (url)"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getSource": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Source"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "Size": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of total endpoints cached"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          },
          "Source": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Source"
          },
          "StaticSize": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of static endpoints cached"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "MaximumCacheSize": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Maximum cache size (capacity)"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "DynamicSize": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of dynamic endpoints cached"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedEndpointRegistry",
        "desc": "Managed EndpointRegistry"
      },
      "context=MyCamel,name=\"simple-route\",type=routes": {
        "op": {
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "getOldestInflightExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "OldestInflightExchangeId"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "dumpRouteAsXml": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Dumps the route as XML"
            },
            {
              "args": [],
              "ret": "java.lang.String",
              "desc": "Dumps the route as XML"
            }
          ],
          "setTracing": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Tracing"
          },
          "suspend": [
            {
              "args": [],
              "ret": "void",
              "desc": "Suspend route"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "long",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Suspend route (using timeout in seconds)"
            }
          ],
          "getTracing": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "Tracing"
          },
          "getLastError": {
            "args": [],
            "ret": "org.apache.camel.spi.RouteError",
            "desc": "LastError"
          },
          "getHasRouteController": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "HasRouteController"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "getLoad15": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load15"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "stop": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.Long",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.Boolean",
                  "desc": ""
                }
              ],
              "ret": "boolean",
              "desc": "Stop route, abort stop after timeout (in seconds)"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "long",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Stop route (using timeout in seconds)"
            },
            {
              "args": [],
              "ret": "void",
              "desc": "Stop route"
            }
          ],
          "reset": [
            {
              "args": [],
              "ret": "void",
              "desc": "Reset counters"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Reset counters"
            }
          ],
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "getOldestInflightDuration": {
            "args": [],
            "ret": "java.lang.Long",
            "desc": "OldestInflightDuration"
          },
          "shutdown": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "long",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Shutdown route (using timeout in seconds)"
            },
            {
              "args": [],
              "ret": "void",
              "desc": "Shutdown route"
            }
          ],
          "getUptime": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Uptime"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "getRoutePolicyList": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RoutePolicyList"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "getDescription": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Description"
          },
          "getLoad05": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load05"
          },
          "remove": {
            "args": [],
            "ret": "boolean",
            "desc": "Remove route (must be stopped)"
          },
          "dumpRouteStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the routes stats as XML"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "getInflightExchanges": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "InflightExchanges"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getUptimeMillis": {
            "args": [],
            "ret": "long",
            "desc": "UptimeMillis"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Route"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "restart": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "long",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Restarts route (using delay in seconds before starting)"
            },
            {
              "args": [],
              "ret": "void",
              "desc": "Restarts route (1 second delay before starting)"
            }
          ],
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start route"
          },
          "createRouteStaticEndpointJson": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Returns the JSON representation of all the static endpoints (and possible dynamic) defined in this route"
            },
            {
              "args": [],
              "ret": "java.lang.String",
              "desc": "Returns the JSON representation of all the static and dynamic endpoints defined in this route"
            }
          ],
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getMessageHistory": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "MessageHistory"
          },
          "getLoad01": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load01"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          },
          "updateRouteFromXml": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Updates the route from XML"
          }
        },
        "attr": {
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Endpoint URI"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "Description": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Description"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "Load15": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last fifteen minutes"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "OldestInflightDuration": {
            "rw": false,
            "type": "java.lang.Long",
            "desc": "Oldest inflight exchange duration"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "UptimeMillis": {
            "rw": false,
            "type": "long",
            "desc": "Route Uptime [milliseconds]"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "HasRouteController": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Route controller"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "Uptime": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Uptime [human readable text]"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "RoutePolicyList": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Policy List"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "MessageHistory": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Message History"
          },
          "LastError": {
            "rw": false,
            "type": "org.apache.camel.spi.RouteError",
            "desc": "Last error"
          },
          "Load05": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last five minutes"
          },
          "OldestInflightExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Oldest inflight exchange id"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route State"
          },
          "InflightExchanges": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Current number of inflight Exchanges"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          },
          "Tracing": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "Tracing"
          },
          "Load01": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last minute"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedSuspendableRoute",
        "desc": "Managed Suspendable Route"
      },
      "context=MyCamel,name=TimerConsumer(0x1e225820),type=consumers": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getInflightExchanges": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "InflightExchanges"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint URI"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "InflightExchanges": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Current number of inflight Exchanges"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedConsumer",
        "desc": "Managed Consumer"
      },
      "context=MyCamel,name=\"route-log\",type=processors": {
        "op": {
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "explain": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Explain how this processor is configured"
          },
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "getIndex": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Index"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "getLogName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LogName"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "getMarker": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Marker"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "getLoggingLevel": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LoggingLevel"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "informationJson": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Processor information as JSon"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getSupportExtendedInformation": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "SupportExtendedInformation"
          },
          "getProcessorId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ProcessorId"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Processor"
          },
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getMessage": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Message"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Processor"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "reset": {
            "args": [],
            "ret": "void",
            "desc": "Reset counters"
          },
          "dumpProcessorAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the processor as XML"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          }
        },
        "attr": {
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "Message": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The log message (uses simple language)"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "Index": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Processor Index"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "LogName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The name of the logger"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "LoggingLevel": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The logging level"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "ProcessorId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor ID"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "SupportExtendedInformation": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Whether this processor supports extended JMX information"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Marker": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "To use slf4j marker"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor State"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedLog",
        "desc": "Managed Log"
      },
      "context=MyCamel,name=DefaultRuntimeCamelCatalog,type=services": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "modelJSonSchema": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Returns the model information as JSon format"
          },
          "componentJSonSchema": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Returns the component information as JSon format"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "dataFormatJSonSchema": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Returns the data format information as JSon format."
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "languageJSonSchema": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Returns the language information as JSon format"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedRuntimeCamelCatalog",
        "desc": "Managed RuntimeCamelCatalog"
      },
      "context=MyCamel,name=\"spring-event\",type=components": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "explain": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Explain how this component is configured"
          },
          "getComponentName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ComponentName"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isVerifySupported": {
            "args": [],
            "ret": "boolean",
            "desc": "VerifySupported"
          },
          "informationJson": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Component information as JSon"
          },
          "verify": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "org.apache.camel.component.extension.ComponentVerifierExtension$Result",
            "desc": "Verify options against a given scope"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "attr": {
          "VerifySupported": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this component support verification (parameters or connectivity)"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ComponentName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component Name"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedComponent",
        "desc": "Managed Component"
      },
      "context=MyCamel,name=DefaultValidatorRegistry,type=services": {
        "op": {
          "getDynamicSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "DynamicSize"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getStaticSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "StaticSize"
          },
          "listValidators": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Lists all the validators in the registry"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "purge": {
            "args": [],
            "ret": "void",
            "desc": "Purges the cache"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Size"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "getMaximumCacheSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "MaximumCacheSize"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getSource": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Source"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "Size": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of total validators cached"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          },
          "Source": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Source"
          },
          "StaticSize": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of static validators cached"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "MaximumCacheSize": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Maximum cache size (capacity)"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "DynamicSize": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of dynamic validators cached"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedValidatorRegistry",
        "desc": "Managed ValidatorRegistry"
      },
      "context=MyCamel,name=BacklogDebugger,type=tracer": {
        "op": {
          "getSuspendedBreakpointNodeIds": {
            "args": [],
            "ret": "java.util.Set",
            "desc": "Return the node ids which is currently suspended"
          },
          "getDebugCounter": {
            "args": [],
            "ret": "long",
            "desc": "DebugCounter"
          },
          "resetDebugCounter": {
            "args": [],
            "ret": "void",
            "desc": "Resets the debug counter"
          },
          "setMessageBodyOnBreakpoint": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.Object",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Updates the message body (with a new type) on the suspended breakpoint at the given node id"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.Object",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Updates the message body (uses same type as old body) on the suspended breakpoint at the given node id"
            }
          ],
          "removeBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Remote the breakpoint from the given node id (will resume suspend breakpoint first)"
          },
          "getFallbackTimeout": {
            "args": [],
            "ret": "long",
            "desc": "FallbackTimeout"
          },
          "stepBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Starts single step debugging from the suspended breakpoint at the given node id"
          },
          "validateConditionalBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Used for validating if a given predicate is valid or not"
          },
          "disableDebugger": {
            "args": [],
            "ret": "void",
            "desc": "Disable the debugger"
          },
          "setBodyIncludeStreams": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "BodyIncludeStreams"
          },
          "setMessageHeaderOnBreakpoint": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "java.lang.Object",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Updates\/adds the message header (uses same type as old header value) on the suspended breakpoint at the given node id"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "java.lang.Object",
                  "desc": ""
                },
                {
                  "name": "p4",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Updates\/adds the message header (with a new type) on the suspended breakpoint at the given node id"
            }
          ],
          "setBodyMaxChars": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "BodyMaxChars"
          },
          "getBodyMaxChars": {
            "args": [],
            "ret": "int",
            "desc": "BodyMaxChars"
          },
          "getLoggingLevel": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LoggingLevel"
          },
          "removeMessageHeaderOnBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Removes the message header on the suspended breakpoint at the given node id"
          },
          "isSingleStepMode": {
            "args": [],
            "ret": "boolean",
            "desc": "SingleStepMode"
          },
          "setFallbackTimeout": {
            "args": [
              {
                "name": "p1",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "FallbackTimeout"
          },
          "isBodyIncludeFiles": {
            "args": [],
            "ret": "boolean",
            "desc": "BodyIncludeFiles"
          },
          "addBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Add a breakpoint at the given node id"
          },
          "enableDebugger": {
            "args": [],
            "ret": "void",
            "desc": "Enable the debugger"
          },
          "removeAllBreakpoints": {
            "args": [],
            "ret": "void",
            "desc": "Remote all breakpoints (will resume all suspend breakpoints first and exists single step mode)"
          },
          "setBodyIncludeFiles": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "BodyIncludeFiles"
          },
          "resumeAll": {
            "args": [],
            "ret": "void",
            "desc": "Resume running any suspended breakpoints, and exits step mode"
          },
          "addConditionalBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Add a conditional breakpoint at the given node id"
          },
          "dumpTracedMessagesAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the messages in xml format from the suspended breakpoint at the given node"
          },
          "resumeBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Resume running from the suspended breakpoint at the given node id"
          },
          "removeMessageBodyOnBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Removes the message body on the suspended breakpoint at the given node id"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isBodyIncludeStreams": {
            "args": [],
            "ret": "boolean",
            "desc": "BodyIncludeStreams"
          },
          "setLoggingLevel": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "LoggingLevel"
          },
          "enableBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Enables a breakpoint which has been disabled"
          },
          "isEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "Enabled"
          },
          "disableBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Disables a breakpoint"
          },
          "step": {
            "args": [],
            "ret": "void",
            "desc": "Steps to next node in step mode"
          },
          "getBreakpoints": {
            "args": [],
            "ret": "java.util.Set",
            "desc": "Return the node ids which has breakpoints"
          }
        },
        "attr": {
          "BodyIncludeStreams": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether to include stream based message body in the trace message."
          },
          "SingleStepMode": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether currently in step mode"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "FallbackTimeout": {
            "rw": true,
            "type": "long",
            "desc": "Fallback Timeout in seconds when block the message processing in Camel."
          },
          "LoggingLevel": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "Logging Level"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "BodyMaxChars": {
            "rw": true,
            "type": "int",
            "desc": "Number of maximum chars in the message body in the trace message. Use zero or negative value to have unlimited size."
          },
          "Enabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Is debugger enabled"
          },
          "BodyIncludeFiles": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether to include file based message body in the trace message."
          },
          "DebugCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of total debugged messages"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedBacklogDebugger",
        "desc": "Managed BacklogDebugger"
      },
      "context=MyCamel,name=DefaultRestRegistry,type=services": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "apiDocAsJson": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Outputs the Rest services API documentation in JSon (requires camel-swagger-java on classpath)"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "listRestServices": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Lists all the Rest services in the registry (url, path, verb, consumes, produces)"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getNumberOfRestServices": {
            "args": [],
            "ret": "int",
            "desc": "NumberOfRestServices"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "NumberOfRestServices": {
            "rw": false,
            "type": "int",
            "desc": "Number of rest services in the registry"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedRestRegistry",
        "desc": "Managed RestRegistry"
      },
      "context=MyCamel,name=\"MyCamel\",type=routecontrollers": {
        "op": {
          "getControlledRoutes": {
            "args": [],
            "ret": "java.util.Collection",
            "desc": "ControlledRoutes"
          }
        },
        "attr": {
          "ControlledRoutes": {
            "rw": false,
            "type": "java.util.Collection",
            "desc": "Controlled Routes"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedRouteController",
        "desc": ""
      },
      "context=MyCamel,name=DefaultAsyncProcessorAwaitManager,type=services": {
        "op": {
          "getMeanDuration": {
            "args": [],
            "ret": "long",
            "desc": "MeanDuration"
          },
          "getMinDuration": {
            "args": [],
            "ret": "long",
            "desc": "MinDuration"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "setInterruptThreadsWhileStopping": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "InterruptThreadsWhileStopping"
          },
          "interrupt": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "To interrupt an exchange which may seem as stuck, to force the exchange to continue, allowing any blocking thread to be released."
          },
          "getThreadsInterrupted": {
            "args": [],
            "ret": "long",
            "desc": "ThreadsInterrupted"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "isInterruptThreadsWhileStopping": {
            "args": [],
            "ret": "boolean",
            "desc": "InterruptThreadsWhileStopping"
          },
          "getMaxDuration": {
            "args": [],
            "ret": "long",
            "desc": "MaxDuration"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets the statistics"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getSize": {
            "args": [],
            "ret": "int",
            "desc": "Size"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "getTotalDuration": {
            "args": [],
            "ret": "long",
            "desc": "TotalDuration"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getThreadsBlocked": {
            "args": [],
            "ret": "long",
            "desc": "ThreadsBlocked"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "browse": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Lists all the exchanges which are currently inflight, having a blocked thread awaiting for other threads to trigger the callback when they are done"
          }
        },
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Utilization statistics enabled"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "Size": {
            "rw": false,
            "type": "int",
            "desc": "Number of threads that are blocked waiting for other threads to trigger the callback when they are done processing the exchange"
          },
          "ThreadsInterrupted": {
            "rw": false,
            "type": "long",
            "desc": "Number of threads that has been interrupted"
          },
          "MaxDuration": {
            "rw": false,
            "type": "long",
            "desc": "The maximum wait time in msec."
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "MinDuration": {
            "rw": false,
            "type": "long",
            "desc": "The minimum wait time in msec."
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          },
          "TotalDuration": {
            "rw": false,
            "type": "long",
            "desc": "Total wait time in msec."
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "MeanDuration": {
            "rw": false,
            "type": "long",
            "desc": "The average wait time in msec."
          },
          "InterruptThreadsWhileStopping": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether to interrupt any blocking threads during stopping."
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "ThreadsBlocked": {
            "rw": false,
            "type": "long",
            "desc": "Number of threads that has been blocked"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedAsyncProcessorAwaitManager",
        "desc": "Managed AsyncProcessorAwaitManager"
      },
      "context=MyCamel,name=DefaultShutdownStrategy,type=services": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedService",
        "desc": "Managed Service"
      },
      "context=MyCamel,name=\"properties\",type=components": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "explain": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Explain how this component is configured"
          },
          "getComponentName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ComponentName"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isVerifySupported": {
            "args": [],
            "ret": "boolean",
            "desc": "VerifySupported"
          },
          "informationJson": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Component information as JSon"
          },
          "verify": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "org.apache.camel.component.extension.ComponentVerifierExtension$Result",
            "desc": "Verify options against a given scope"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "attr": {
          "VerifySupported": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this component support verification (parameters or connectivity)"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ComponentName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component Name"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedComponent",
        "desc": "Managed Component"
      },
      "context=MyCamel,name=\"DefaultErrorHandlerBuilder(ref:CamelDefaultErrorHandlerBuilder)\",type=errorhandlers": {
        "op": {
          "getLogStackTrace": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "LogStackTrace"
          },
          "getRetriesExhaustedLogLevel": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RetriesExhaustedLogLevel"
          },
          "setLogExhaustedMessageBody": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "LogExhaustedMessageBody"
          },
          "isDeadLetterHandleNewException": {
            "args": [],
            "ret": "boolean",
            "desc": "DeadLetterHandleNewException"
          },
          "setUseCollisionAvoidance": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "UseCollisionAvoidance"
          },
          "setBackOffMultiplier": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Double",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "BackOffMultiplier"
          },
          "getMaximumRedeliveryDelay": {
            "args": [],
            "ret": "java.lang.Long",
            "desc": "MaximumRedeliveryDelay"
          },
          "getDeadLetterChannelEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "DeadLetterChannelEndpointUri"
          },
          "getLogExhausted": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "LogExhausted"
          },
          "isSupportRedelivery": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportRedelivery"
          },
          "setLogStackTrace": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "LogStackTrace"
          },
          "getRedeliveryDelay": {
            "args": [],
            "ret": "java.lang.Long",
            "desc": "RedeliveryDelay"
          },
          "setAllowRedeliveryWhileStopping": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "AllowRedeliveryWhileStopping"
          },
          "setCollisionAvoidancePercent": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Double",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "CollisionAvoidancePercent"
          },
          "isDeadLetterChannel": {
            "args": [],
            "ret": "boolean",
            "desc": "DeadLetterChannel"
          },
          "getLogNewException": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "LogNewException"
          },
          "setCollisionAvoidanceFactor": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Double",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "CollisionAvoidanceFactor"
          },
          "setMaximumRedeliveries": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Integer",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "MaximumRedeliveries"
          },
          "getBackOffMultiplier": {
            "args": [],
            "ret": "java.lang.Double",
            "desc": "BackOffMultiplier"
          },
          "getLogContinued": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "LogContinued"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getRetryAttemptedLogLevel": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RetryAttemptedLogLevel"
          },
          "getPendingRedeliveryCount": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "PendingRedeliveryCount"
          },
          "setLogExhaustedMessageHistory": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "LogExhaustedMessageHistory"
          },
          "isSupportTransactions": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportTransactions"
          },
          "setRedeliveryDelay": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "RedeliveryDelay"
          },
          "getLogRetryStackTrace": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "LogRetryStackTrace"
          },
          "getAllowRedeliveryWhileStopping": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "AllowRedeliveryWhileStopping"
          },
          "setRetryAttemptedLogLevel": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "RetryAttemptedLogLevel"
          },
          "getLogHandled": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "LogHandled"
          },
          "setDelayPattern": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "DelayPattern"
          },
          "getUseCollisionAvoidance": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "UseCollisionAvoidance"
          },
          "getLogExhaustedMessageBody": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "LogExhaustedMessageBody"
          },
          "getCollisionAvoidanceFactor": {
            "args": [],
            "ret": "java.lang.Double",
            "desc": "CollisionAvoidanceFactor"
          },
          "setUseExponentialBackOff": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "UseExponentialBackOff"
          },
          "setMaximumRedeliveryDelay": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "MaximumRedeliveryDelay"
          },
          "getUseExponentialBackOff": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "UseExponentialBackOff"
          },
          "setLogNewException": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "LogNewException"
          },
          "setLogRetryStackTrace": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "LogRetryStackTrace"
          },
          "getMaximumRedeliveries": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "MaximumRedeliveries"
          },
          "setLogExhausted": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "LogExhausted"
          },
          "setLogContinued": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "LogContinued"
          },
          "setLogHandled": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "LogHandled"
          },
          "setRetriesExhaustedLogLevel": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "RetriesExhaustedLogLevel"
          },
          "getDelayPattern": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "DelayPattern"
          },
          "getLogExhaustedMessageHistory": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "LogExhaustedMessageHistory"
          },
          "getCollisionAvoidancePercent": {
            "args": [],
            "ret": "java.lang.Double",
            "desc": "CollisionAvoidancePercent"
          },
          "isDeadLetterUseOriginalMessage": {
            "args": [],
            "ret": "boolean",
            "desc": "DeadLetterUseOriginalMessage"
          }
        },
        "attr": {
          "LogContinued": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "RedeliveryPolicy for logging handled and continued exceptions"
          },
          "LogExhaustedMessageBody": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "RedeliveryPolicy for logging exhausted with message body"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "CollisionAvoidanceFactor": {
            "rw": true,
            "type": "java.lang.Double",
            "desc": "RedeliveryPolicy for collision avoidance factor"
          },
          "RedeliveryDelay": {
            "rw": true,
            "type": "java.lang.Long",
            "desc": "RedeliveryPolicy for redelivery delay"
          },
          "DeadLetterChannel": {
            "rw": false,
            "type": "boolean",
            "desc": "Is this error handler a dead letter channel"
          },
          "MaximumRedeliveries": {
            "rw": true,
            "type": "java.lang.Integer",
            "desc": "RedeliveryPolicy for maximum redeliveries"
          },
          "DeadLetterUseOriginalMessage": {
            "rw": false,
            "type": "boolean",
            "desc": "When a message is moved to dead letter channel is it the original message or recent message"
          },
          "UseCollisionAvoidance": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "RedeliveryPolicy for using collision avoidance"
          },
          "RetriesExhaustedLogLevel": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "RedeliveryPolicy for logging level when retries exhausted"
          },
          "LogNewException": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "RedeliveryPolicy for logging new exceptions"
          },
          "SupportRedelivery": {
            "rw": false,
            "type": "boolean",
            "desc": "Does the error handler support redelivery"
          },
          "PendingRedeliveryCount": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of Exchanges scheduled for redelivery (waiting to be redelivered in the future)"
          },
          "RetryAttemptedLogLevel": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "RedeliveryPolicy for logging level when attempting retry"
          },
          "LogExhausted": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "RedeliveryPolicy for logging exhausted exceptions"
          },
          "BackOffMultiplier": {
            "rw": true,
            "type": "java.lang.Double",
            "desc": "RedeliveryPolicy for backoff multiplier"
          },
          "CollisionAvoidancePercent": {
            "rw": true,
            "type": "java.lang.Double",
            "desc": "RedeliveryPolicy for collision avoidance percent"
          },
          "AllowRedeliveryWhileStopping": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "RedeliveryPolicy for allow redelivery while stopping"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "UseExponentialBackOff": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "RedeliveryPolicy for using exponential backoff"
          },
          "LogStackTrace": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "RedeliveryPolicy for logging stack traces"
          },
          "LogExhaustedMessageHistory": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "RedeliveryPolicy for logging exhausted with message history"
          },
          "DeadLetterHandleNewException": {
            "rw": false,
            "type": "boolean",
            "desc": "Does this error handler handle new exceptions which may occur during error handling"
          },
          "LogHandled": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "RedeliveryPolicy for logging handled exceptions"
          },
          "SupportTransactions": {
            "rw": false,
            "type": "boolean",
            "desc": "Does this error handler support transactions"
          },
          "DeadLetterChannelEndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint Uri for the dead letter channel where dead message is move to"
          },
          "LogRetryStackTrace": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "RedeliveryPolicy for logging redelivery stack traces"
          },
          "MaximumRedeliveryDelay": {
            "rw": true,
            "type": "java.lang.Long",
            "desc": "RedeliveryPolicy for maximum redelivery delay"
          },
          "DelayPattern": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "RedeliveryPolicy for delay pattern"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedErrorHandler",
        "desc": "Managed ErrorHandler"
      },
      "context=MyCamel,name=DefaultExecutorServiceManager,type=services": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedService",
        "desc": "Managed Service"
      },
      "context=MyCamel,name=\"route-transform\",type=processors": {
        "op": {
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "explain": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Explain how this processor is configured"
          },
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "getIndex": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Index"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "informationJson": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Processor information as JSon"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getSupportExtendedInformation": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "SupportExtendedInformation"
          },
          "getProcessorId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ProcessorId"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Processor"
          },
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getExpression": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Expression"
          },
          "getExpressionLanguage": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ExpressionLanguage"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Processor"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "reset": {
            "args": [],
            "ret": "void",
            "desc": "Reset counters"
          },
          "dumpProcessorAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the processor as XML"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          }
        },
        "attr": {
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "Index": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Processor Index"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "ProcessorId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor ID"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "SupportExtendedInformation": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Whether this processor supports extended JMX information"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "ExpressionLanguage": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The language for the expression"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "Expression": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Expression to return the transformed message body (the new message body to use)"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor State"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedTransformer",
        "desc": "Managed Transformer"
      },
      "context=MyCamel,name=\"timer\",type=components": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "explain": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Explain how this component is configured"
          },
          "getComponentName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ComponentName"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isVerifySupported": {
            "args": [],
            "ret": "boolean",
            "desc": "VerifySupported"
          },
          "informationJson": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Component information as JSon"
          },
          "verify": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "org.apache.camel.component.extension.ComponentVerifierExtension$Result",
            "desc": "Verify options against a given scope"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "attr": {
          "VerifySupported": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this component support verification (parameters or connectivity)"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ComponentName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component Name"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedComponent",
        "desc": "Managed Component"
      },
      "context=MyCamel,name=\"bean\",type=components": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "explain": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Explain how this component is configured"
          },
          "getComponentName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ComponentName"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isVerifySupported": {
            "args": [],
            "ret": "boolean",
            "desc": "VerifySupported"
          },
          "informationJson": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Component information as JSon"
          },
          "verify": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "org.apache.camel.component.extension.ComponentVerifierExtension$Result",
            "desc": "Verify options against a given scope"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "attr": {
          "VerifySupported": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this component support verification (parameters or connectivity)"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ComponentName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component Name"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedComponent",
        "desc": "Managed Component"
      },
      "context=MyCamel,name=\"MyCamel\",type=context": {
        "op": {
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "getCamelVersion": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelVersion"
          },
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "getClassResolver": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ClassResolver"
          },
          "isLogMask": {
            "args": [],
            "ret": "boolean",
            "desc": "LogMask"
          },
          "isUseMDCLogging": {
            "args": [],
            "ret": "boolean",
            "desc": "UseMDCLogging"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "isUseBreadcrumb": {
            "args": [],
            "ret": "boolean",
            "desc": "UseBreadcrumb"
          },
          "explainEipJson": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Returns a JSON schema representation of the EIP parameters for the given EIP by its id"
          },
          "dataFormatParameterJsonSchema": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Returns the JSON schema representation of the data format parameters for the given data format name"
          },
          "sendBody": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.Object",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Send body (in only)"
          },
          "dumpRoutesAsXml": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Dumps the routes as XML"
            },
            {
              "args": [],
              "ret": "java.lang.String",
              "desc": "Dumps the routes as XML"
            }
          ],
          "componentParameterJsonSchema": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Returns the JSON schema representation of the endpoint parameters for the given component name"
          },
          "canSendToEndpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Whether its possible to send to the endpoint (eg the endpoint has a producer)"
          },
          "setShutdownNowOnTimeout": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "ShutdownNowOnTimeout"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "startAllRoutes": {
            "args": [],
            "ret": "void",
            "desc": "Starts all the routes which currently is not started"
          },
          "getProperties": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Properties"
          },
          "getLoad15": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load15"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Camel (shutdown)"
          },
          "setProperty": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Sets the value of a Camel global option"
          },
          "getGlobalOptions": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "GlobalOptions"
          },
          "reset": [
            {
              "args": [],
              "ret": "void",
              "desc": "Reset counters"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Reset counters"
            }
          ],
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "addOrUpdateRoutesFromXml": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Adds or updates existing routes from XML"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Adds or updates existing routes from XML"
            }
          ],
          "findComponents": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Find all Camel components available in the classpath"
          },
          "getManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ManagementName"
          },
          "explainEndpointJson": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": " Returns a JSON schema representation of the endpoint parameters for the given endpoint uri"
          },
          "dumpRoutesStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the CamelContext and routes stats as XML"
          },
          "listEips": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "List all Camel EIPs from camel-core"
          },
          "findComponentNames": {
            "args": [],
            "ret": "java.util.List",
            "desc": "Find all Camel components names available in the classpath"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "requestBody": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.Object",
                "desc": ""
              }
            ],
            "ret": "java.lang.Object",
            "desc": "Request body (in out)"
          },
          "getPackageScanClassResolver": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "PackageScanClassResolver"
          },
          "isMessageHistory": {
            "args": [],
            "ret": "boolean",
            "desc": "MessageHistory"
          },
          "getTimeout": {
            "args": [],
            "ret": "long",
            "desc": "Timeout"
          },
          "getInflightExchanges": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "InflightExchanges"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getUptimeMillis": {
            "args": [],
            "ret": "long",
            "desc": "UptimeMillis"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Camel"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "getApplicationContextClassName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ApplicationContextClassName"
          },
          "restart": {
            "args": [],
            "ret": "void",
            "desc": "Restart Camel (stop and then start)"
          },
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getStartedRoutes": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "StartedRoutes"
          },
          "getTimeUnit": {
            "args": [],
            "ret": "java.util.concurrent.TimeUnit",
            "desc": "TimeUnit"
          },
          "setTimeout": {
            "args": [
              {
                "name": "p1",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Timeout"
          },
          "createEndpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Creates the endpoint by the given URI"
          },
          "completeEndpointPath": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "Returns the list of available endpoint paths for the given component name, endpoint properties and completion text"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "getManagementStatisticsLevel": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ManagementStatisticsLevel"
          },
          "getTotalRoutes": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "TotalRoutes"
          },
          "findEips": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Find all Camel EIPs from camel-core"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          },
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "eipParameterJsonSchema": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Returns the JSON schema representation of the EIP parameters for the given EIP name"
          },
          "dumpRestsAsXml": [
            {
              "args": [],
              "ret": "java.lang.String",
              "desc": "Dumps the rests as XML"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Dumps the rests as XML"
            }
          ],
          "requestBodyAndHeaders": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.Object",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "java.lang.Object",
            "desc": "Request body and headers (in out)"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "isShutdownNowOnTimeout": {
            "args": [],
            "ret": "boolean",
            "desc": "ShutdownNowOnTimeout"
          },
          "sendBodyAndHeaders": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.Object",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Send body and headers (in only)"
          },
          "setTracing": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Tracing"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Camel"
          },
          "getTracing": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "Tracing"
          },
          "removeEndpoints": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Removes endpoints by the given pattern"
          },
          "findEipNames": {
            "args": [],
            "ret": "java.util.List",
            "desc": "Find all Camel EIP names from camel-core"
          },
          "languageParameterJsonSchema": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Returns the JSON schema representation of the language parameters for the given language name"
          },
          "setGlobalOption": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Sets the value of a Camel global option"
          },
          "getComponentDocumentation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Returns the HTML documentation for the given camel component"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "setTimeUnit": {
            "args": [
              {
                "name": "p1",
                "type": "java.util.concurrent.TimeUnit",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "TimeUnit"
          },
          "listComponents": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "List all Camel components available in the classpath"
          },
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "getUptime": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Uptime"
          },
          "getHeadersMapFactoryClassName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "HeadersMapFactoryClassName"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "dumpRoutesCoverageAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the routes coverage as XML"
          },
          "requestStringBody": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.Object",
            "desc": "Request body (String type) (in out)"
          },
          "getLoad05": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load05"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "isUseDataType": {
            "args": [],
            "ret": "boolean",
            "desc": "UseDataType"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "isAllowUseOriginalMessage": {
            "args": [],
            "ret": "boolean",
            "desc": "AllowUseOriginalMessage"
          },
          "explainComponentJson": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": " Returns a JSON schema representation of the component parameters for the given component by its id"
          },
          "getProperty": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Gets the value of a Camel global option"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Camel"
          },
          "createRouteStaticEndpointJson": [
            {
              "args": [],
              "ret": "java.lang.String",
              "desc": "Returns the JSON representation of all the static and dynamic endpoints defined in all the routes"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Returns the JSON representation of all the static endpoints (and possible dynamic) defined in all the routes"
            }
          ],
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getLoad01": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load01"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "getGlobalOption": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Gets the value of a Camel global option"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "sendStringBody": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Send body (String type) (in only)"
          }
        },
        "attr": {
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "UseMDCLogging": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether MDC logging is supported"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "TotalRoutes": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Total number of routes"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "UseBreadcrumb": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether breadcrumbs is in use"
          },
          "UptimeMillis": {
            "rw": false,
            "type": "long",
            "desc": "Uptime [milliseconds]"
          },
          "TimeUnit": {
            "rw": true,
            "type": "java.util.concurrent.TimeUnit",
            "desc": "Shutdown timeout time unit"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "LogMask": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether security mask for Logging is enabled"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "Timeout": {
            "rw": true,
            "type": "long",
            "desc": "Shutdown timeout"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "AllowUseOriginalMessage": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether allowing access to the original message during routing"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "MessageHistory": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether message history is enabled"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel State"
          },
          "InflightExchanges": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Current number of inflight Exchanges"
          },
          "Tracing": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "Tracing"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "HeadersMapFactoryClassName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "HeadersMapFactory class name"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "Properties": {
            "rw": false,
            "type": "java.util.Map",
            "desc": "Camel Properties"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "Load15": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last fifteen minutes"
          },
          "ApplicationContextClassName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ApplicationContext class name"
          },
          "StartedRoutes": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Current number of started routes"
          },
          "ManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "ClassResolver": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ClassResolver class name"
          },
          "GlobalOptions": {
            "rw": false,
            "type": "java.util.Map",
            "desc": "Camel Global Options"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "UseDataType": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether Message DataType is enabled"
          },
          "Uptime": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Uptime [human readable text]"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "ShutdownNowOnTimeout": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether to force shutdown now when a timeout occurred"
          },
          "Load05": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last five minutes"
          },
          "PackageScanClassResolver": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "PackageScanClassResolver class name"
          },
          "CamelVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel Version"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          },
          "ManagementStatisticsLevel": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel Management StatisticsLevel"
          },
          "Load01": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last minute"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedCamelContext",
        "desc": "Managed CamelContext"
      },
      "context=MyCamel,name=DefaultTypeConverter,type=services": {
        "op": {
          "getTypeConverterExistsLoggingLevel": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "TypeConverterExistsLoggingLevel"
          },
          "listTypeConverters": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Lists all the type converters in the registry (from -> to)"
          },
          "hasTypeConverter": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Checks whether a type converter exists for converting (from -> to)"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getTypeConverterExists": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "TypeConverterExists"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getHitCounter": {
            "args": [],
            "ret": "long",
            "desc": "HitCounter"
          },
          "getMissCounter": {
            "args": [],
            "ret": "long",
            "desc": "MissCounter"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "getAttemptCounter": {
            "args": [],
            "ret": "long",
            "desc": "AttemptCounter"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getBaseHitCounter": {
            "args": [],
            "ret": "long",
            "desc": "BaseHitCounter"
          },
          "resetTypeConversionCounters": {
            "args": [],
            "ret": "void",
            "desc": "Resets the type conversion counters"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getNoopCounter": {
            "args": [],
            "ret": "long",
            "desc": "NoopCounter"
          },
          "getNumberOfTypeConverters": {
            "args": [],
            "ret": "int",
            "desc": "NumberOfTypeConverters"
          },
          "getFailedCounter": {
            "args": [],
            "ret": "long",
            "desc": "FailedCounter"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          }
        },
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Utilization statistics enabled"
          },
          "NumberOfTypeConverters": {
            "rw": false,
            "type": "int",
            "desc": "Number of type converters in the registry"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          },
          "FailedCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of type conversion failures (failed conversions)"
          },
          "TypeConverterExistsLoggingLevel": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Logging level to use if attempting to add a duplicate type converter"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "BaseHitCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of type conversion hits by base core converters (successful conversions)"
          },
          "HitCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of type conversion hits (successful conversions)"
          },
          "AttemptCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of type conversion attempts"
          },
          "TypeConverterExists": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "What to do if attempting to add a duplicate type converter (Override, Ignore or Fail)"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "NoopCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of noop attempts (no type conversion was needed)"
          },
          "MissCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of type conversion misses (no suitable type converter)"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedTypeConverterRegistry",
        "desc": "Managed TypeConverterRegistry"
      },
      "context=MyCamel,name=DefaultInflightRepository,type=services": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getSize": {
            "args": [],
            "ret": "int",
            "desc": "Size"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "size": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Current size of inflight exchanges which are from the given route."
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "browse": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "int",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "Lists all the exchanges which are currently inflight, limited and sorted"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "int",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "List all the exchanges that origins from the given route, which are currently inflight, limited and sorted"
            },
            {
              "args": [],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "Lists all the exchanges which are currently inflight"
            }
          ]
        },
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "Size": {
            "rw": false,
            "type": "int",
            "desc": "Current size of inflight exchanges."
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedInflightRepository",
        "desc": "Managed InflightRepository"
      },
      "context=MyCamel,name=DefaultTransformerRegistry,type=services": {
        "op": {
          "getDynamicSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "DynamicSize"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getStaticSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "StaticSize"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "purge": {
            "args": [],
            "ret": "void",
            "desc": "Purges the cache"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Size"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "listTransformers": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Lists all the transformers in the registry"
          },
          "getMaximumCacheSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "MaximumCacheSize"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getSource": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Source"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "Size": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of total transformers cached"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          },
          "Source": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Source"
          },
          "StaticSize": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of static transformers cached"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "MaximumCacheSize": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Maximum cache size (capacity)"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "DynamicSize": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of dynamic transformers cached"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedTransformerRegistry",
        "desc": "Managed TransformerRegistry"
      },
      "context=MyCamel,name=\"timer:\/\/foo\\?period=2000\",type=endpoints": {
        "op": {
          "explain": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Explain how this endpoint is configured"
          },
          "isFixedRate": {
            "args": [],
            "ret": "boolean",
            "desc": "FixedRate"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "getDelay": {
            "args": [],
            "ret": "long",
            "desc": "Delay"
          },
          "setTimerName": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "TimerName"
          },
          "isSingleton": {
            "args": [],
            "ret": "boolean",
            "desc": "Singleton"
          },
          "isMultipleConsumersSupported": {
            "args": [],
            "ret": "boolean",
            "desc": "MultipleConsumersSupported"
          },
          "setPeriod": {
            "args": [
              {
                "name": "p1",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Period"
          },
          "getTimerName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "TimerName"
          },
          "getPeriod": {
            "args": [],
            "ret": "long",
            "desc": "Period"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "setDaemon": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Daemon"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "setRepeatCount": {
            "args": [
              {
                "name": "p1",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "RepeatCount"
          },
          "isDaemon": {
            "args": [],
            "ret": "boolean",
            "desc": "Daemon"
          },
          "informationJson": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Endpoint information as JSon"
          },
          "setFixedRate": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "FixedRate"
          },
          "setDelay": {
            "args": [
              {
                "name": "p1",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Delay"
          },
          "getRepeatCount": {
            "args": [],
            "ret": "long",
            "desc": "RepeatCount"
          }
        },
        "attr": {
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint URI"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "MultipleConsumersSupported": {
            "rw": false,
            "type": "boolean",
            "desc": ""
          },
          "RepeatCount": {
            "rw": true,
            "type": "long",
            "desc": "Repeat Count"
          },
          "Daemon": {
            "rw": true,
            "type": "boolean",
            "desc": "Timer Daemon"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint State"
          },
          "Singleton": {
            "rw": false,
            "type": "boolean",
            "desc": "Singleton"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "Period": {
            "rw": true,
            "type": "long",
            "desc": "Timer Period"
          },
          "FixedRate": {
            "rw": true,
            "type": "boolean",
            "desc": "Timer FixedRate"
          },
          "TimerName": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "Timer Name"
          },
          "Delay": {
            "rw": true,
            "type": "long",
            "desc": "Timer Delay"
          }
        },
        "class": "org.apache.camel.component.timer.TimerEndpoint",
        "desc": "Managed TimerEndpoint"
      },
      "context=MyCamel,name=BacklogTracer,type=tracer": {
        "op": {
          "getBacklogSize": {
            "args": [],
            "ret": "int",
            "desc": "BacklogSize"
          },
          "dumpAllTracedMessagesAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps all the traced messages in xml format"
          },
          "setTracePattern": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "TracePattern"
          },
          "setTraceFilter": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "TraceFilter"
          },
          "setBodyIncludeStreams": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "BodyIncludeStreams"
          },
          "setBodyMaxChars": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "BodyMaxChars"
          },
          "setBacklogSize": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "BacklogSize"
          },
          "getBodyMaxChars": {
            "args": [],
            "ret": "int",
            "desc": "BodyMaxChars"
          },
          "resetTraceCounter": {
            "args": [],
            "ret": "void",
            "desc": "Resets the trace counter"
          },
          "getTraceFilter": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "TraceFilter"
          },
          "getTraceCounter": {
            "args": [],
            "ret": "long",
            "desc": "TraceCounter"
          },
          "isBodyIncludeFiles": {
            "args": [],
            "ret": "boolean",
            "desc": "BodyIncludeFiles"
          },
          "setBodyIncludeFiles": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "BodyIncludeFiles"
          },
          "dumpTracedMessages": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "Dumps the traced messages for the given node or route"
          },
          "isRemoveOnDump": {
            "args": [],
            "ret": "boolean",
            "desc": "RemoveOnDump"
          },
          "dumpTracedMessagesAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the traced messages for the given node or route in xml format"
          },
          "clear": {
            "args": [],
            "ret": "void",
            "desc": "Clears the backlog"
          },
          "dumpAllTracedMessages": {
            "args": [],
            "ret": "java.util.List",
            "desc": "Dumps all the traced messages"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isBodyIncludeStreams": {
            "args": [],
            "ret": "boolean",
            "desc": "BodyIncludeStreams"
          },
          "setEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Enabled"
          },
          "isEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "Enabled"
          },
          "setRemoveOnDump": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "RemoveOnDump"
          },
          "getTracePattern": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "TracePattern"
          }
        },
        "attr": {
          "BodyIncludeStreams": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether to include stream based message body in the trace message."
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "BacklogSize": {
            "rw": true,
            "type": "int",
            "desc": "Number of maximum traced messages in total to keep in the backlog (FIFO queue)"
          },
          "TraceCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of total traced messages"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "RemoveOnDump": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether to remove traced message from backlog when dumping trace messages"
          },
          "BodyMaxChars": {
            "rw": true,
            "type": "int",
            "desc": "Number of maximum chars in the message body in the trace message. Use zero or negative value to have unlimited size."
          },
          "Enabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Is tracing enabled"
          },
          "TraceFilter": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "To filter tracing by predicate (uses simple language by default)"
          },
          "BodyIncludeFiles": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether to include file based message body in the trace message."
          },
          "TracePattern": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "To filter tracing by nodes (pattern)"
          }
        },
        "class": "org.apache.camel.management.mbean.ManagedBacklogTracer",
        "desc": "Managed BacklogTracer"
      }
    },
    "com.sun.management": {
      "type=HotSpotDiagnostic": {
        "op": {
          "setVMOption": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setVMOption"
          },
          "getVMOption": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              }
            ],
            "ret": "javax.management.openmbean.CompositeData",
            "desc": "getVMOption"
          },
          "dumpHeap": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "boolean",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "dumpHeap"
          }
        },
        "attr": {
          "DiagnosticOptions": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "DiagnosticOptions"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.HotSpotDiagnostic",
        "desc": "Information on the management interface of the MBean"
      },
      "type=DiagnosticCommand": {
        "op": {
          "vmUptime": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print VM uptime."
          },
          "vmNativeMemory": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print native memory usage"
          },
          "gcClassHistogram": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Provide statistics about the Java heap usage."
          },
          "gcRunFinalization": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Call java.lang.System.runFinalization()."
          },
          "gcClassStats": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Provide statistics about Java class meta data. Requires -XX:+UnlockDiagnosticVMOptions."
          },
          "threadPrint": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print all threads with stacktraces."
          },
          "gcFinalizerInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Provide information about Java finalization queue."
          },
          "gcRotateLog": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Force the GC log file to be rotated."
          },
          "help": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "For more information about a specific command use 'help <command>'. With no argument this will show a list of available commands. 'help all' will show help for all commands."
          },
          "vmSystemProperties": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print system properties."
          },
          "vmClassloaderStats": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print statistics about all ClassLoaders."
          },
          "gcHeapInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Provide generic Java heap information."
          },
          "gcRun": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Call java.lang.System.gc()."
          },
          "vmVersion": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print JVM version information."
          },
          "vmFlags": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print VM flag options and their current values."
          },
          "vmCommandLine": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print the command line used to start this VM instance."
          },
          "vmDynlibs": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print loaded dynamic libraries."
          }
        },
        "class": "sun.management.DiagnosticCommandImpl",
        "desc": "Diagnostic Commands"
      }
    },
    "jmx4perl": {
      "type=Config": {
        "op": {
          "setHistoryEntriesForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetDebugInfo": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetHistoryEntries": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryEntriesForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p6",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "debugInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "HistorySize": {
            "rw": false,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "MaxDebugEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "HistoryMaxEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "Debug": {
            "rw": true,
            "type": "boolean",
            "desc": "Attribute exposed for management"
          }
        },
        "class": "org.jolokia.backend.Config",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "java.nio": {
      "name=direct,type=BufferPool": {
        "attr": {
          "TotalCapacity": {
            "rw": false,
            "type": "long",
            "desc": "TotalCapacity"
          },
          "MemoryUsed": {
            "rw": false,
            "type": "long",
            "desc": "MemoryUsed"
          },
          "Count": {
            "rw": false,
            "type": "long",
            "desc": "Count"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.ManagementFactoryHelper$1",
        "desc": "Information on the management interface of the MBean"
      },
      "name=mapped,type=BufferPool": {
        "attr": {
          "TotalCapacity": {
            "rw": false,
            "type": "long",
            "desc": "TotalCapacity"
          },
          "MemoryUsed": {
            "rw": false,
            "type": "long",
            "desc": "MemoryUsed"
          },
          "Count": {
            "rw": false,
            "type": "long",
            "desc": "Count"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "class": "sun.management.ManagementFactoryHelper$1",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "org.xnio": {
      "address=\"\/0:0:0:0:0:0:0:0:8080\",provider=\"nio\",type=Xnio,worker=\"XNIO-2\"": {
        "attr": {
          "ProviderName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ProviderName"
          },
          "ConnectionCount": {
            "rw": false,
            "type": "int",
            "desc": "ConnectionCount"
          },
          "ConnectionLimitLowWater": {
            "rw": false,
            "type": "int",
            "desc": "ConnectionLimitLowWater"
          },
          "BindAddress": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "BindAddress"
          },
          "ConnectionLimitHighWater": {
            "rw": false,
            "type": "int",
            "desc": "ConnectionLimitHighWater"
          },
          "WorkerName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "WorkerName"
          }
        },
        "class": "org.xnio.nio.QueuedNioTcpServer$3",
        "desc": "Information on the management interface of the MBean"
      },
      "provider=\"nio\",type=Xnio": {
        "attr": {
          "Version": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Version"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          }
        },
        "class": "org.xnio.nio.NioXnio$3",
        "desc": "Information on the management interface of the MBean"
      },
      "address=\"\/0:0:0:0:0:0:0:0:8081\",provider=\"nio\",type=Xnio,worker=\"XNIO-1\"": {
        "attr": {
          "ProviderName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ProviderName"
          },
          "ConnectionCount": {
            "rw": false,
            "type": "int",
            "desc": "ConnectionCount"
          },
          "ConnectionLimitLowWater": {
            "rw": false,
            "type": "int",
            "desc": "ConnectionLimitLowWater"
          },
          "BindAddress": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "BindAddress"
          },
          "ConnectionLimitHighWater": {
            "rw": false,
            "type": "int",
            "desc": "ConnectionLimitHighWater"
          },
          "WorkerName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "WorkerName"
          }
        },
        "class": "org.xnio.nio.QueuedNioTcpServer$3",
        "desc": "Information on the management interface of the MBean"
      },
      "provider=\"nio\",type=Xnio,worker=\"XNIO-1\"": {
        "attr": {
          "ProviderName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ProviderName"
          },
          "WorkerQueueSize": {
            "rw": false,
            "type": "int",
            "desc": "WorkerQueueSize"
          },
          "ShutdownRequested": {
            "rw": false,
            "type": "boolean",
            "desc": "ShutdownRequested"
          },
          "IoThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "IoThreadCount"
          },
          "CoreWorkerPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "CoreWorkerPoolSize"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "MaxWorkerPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "MaxWorkerPoolSize"
          }
        },
        "class": "org.xnio.nio.NioXnioWorker$1",
        "desc": "Information on the management interface of the MBean"
      },
      "provider=\"nio\",type=Xnio,worker=\"XNIO-2\"": {
        "attr": {
          "ProviderName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ProviderName"
          },
          "WorkerQueueSize": {
            "rw": false,
            "type": "int",
            "desc": "WorkerQueueSize"
          },
          "ShutdownRequested": {
            "rw": false,
            "type": "boolean",
            "desc": "ShutdownRequested"
          },
          "IoThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "IoThreadCount"
          },
          "CoreWorkerPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "CoreWorkerPoolSize"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "MaxWorkerPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "MaxWorkerPoolSize"
          }
        },
        "class": "org.xnio.nio.NioXnioWorker$1",
        "desc": "Information on the management interface of the MBean"
      }
    },
    "jolokia": {
      "type=Discovery": {
        "op": {
          "lookupAgentsWithTimeout": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "Operation exposed for management"
          },
          "lookupAgents": {
            "args": [],
            "ret": "java.util.List",
            "desc": "Operation exposed for management"
          }
        },
        "class": "org.jolokia.discovery.JolokiaDiscovery",
        "desc": "Information on the management interface of the MBean"
      },
      "type=ServerHandler": {
        "op": {
          "mBeanServersInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "class": "org.jolokia.backend.MBeanServerHandler",
        "desc": "Information on the management interface of the MBean"
      },
      "type=Config": {
        "op": {
          "setHistoryEntriesForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetDebugInfo": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetHistoryEntries": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryEntriesForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p6",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "debugInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "attr": {
          "HistorySize": {
            "rw": false,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "MaxDebugEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "HistoryMaxEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "Debug": {
            "rw": true,
            "type": "boolean",
            "desc": "Attribute exposed for management"
          }
        },
        "class": "org.jolokia.backend.Config",
        "desc": "Information on the management interface of the MBean"
      }
    }
  },
  "timestamp": 1587557519,
  "status": 200
}